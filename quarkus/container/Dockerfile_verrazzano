FROM ghcr.io/oracle/oraclelinux:8-slim AS build_env

LABEL maintainer = "Verrazzano developers <verrazzano_ww@oracle.com>"

ENV KEYCLOAK_VERSION 20.0.1
ARG KEYCLOAK_DIST=keycloak-20.0.1.tar.gz

COPY $KEYCLOAK_DIST /tmp/keycloak/

RUN ls /tmp/keycloak/
RUN microdnf install -y tar gzip

# The next step makes it uniform for local development and upstream built.
# If it is a local tar archive then it is unpacked, if from remote is just downloaded.
RUN (cd /tmp/keycloak && \
    tar -xvf /tmp/keycloak/keycloak-*.tar.gz && \
    rm /tmp/keycloak/keycloak-*.tar.gz) || true

RUN mv /tmp/keycloak/keycloak-* /opt/keycloak && mkdir -p /opt/keycloak/data

# Define Quarkus configugration to enable transaction recovery
RUN echo "quarkus.transaction-manager.enable-recovery=true" >> /opt/keycloak/conf/quarkus.properties

RUN chmod -R g+rwX /opt/keycloak

# Create a base directory for ObjectStore, required for transaction recovery
RUN (mkdir /opt/xa && \
    chmod -R g+rwX /opt/xa)

FROM ghcr.io/oracle/oraclelinux:8-slim
ENV LANG en_US.UTF-8

COPY --from=build_env --chown=1000:0 /opt/keycloak /opt/keycloak
COPY --from=build_env --chown=1000:0 /opt/xa /opt/xa

RUN microdnf update -y && \
    microdnf install -y --nodocs java-11-openjdk-headless glibc-langpack-en && \
    microdnf install -y python38 python38-pip && \
    pip3 install setuptools --upgrade && \
    rm -rf /usr/lib/python3.6 && \
    microdnf clean all && rm -rf /var/cache/yum/* && \
    echo "keycloak:x:0:root" >> /etc/group && \
    echo "keycloak:x:1000:0:keycloak user:/opt/keycloak:/sbin/nologin" >> /etc/passwd

# Narayana JTA creates ObjectStore under the directory derived from system property user.dir, so make /opt/xa as working directory
# where userid 1000 can create files
WORKDIR /opt/xa

COPY THIRD_PARTY_LICENSES.txt LICENSE.txt README.md SECURITY.md /licenses/

USER 1000

EXPOSE 8080
EXPOSE 8443

ENTRYPOINT [ "/opt/keycloak/bin/kc.sh" ]

